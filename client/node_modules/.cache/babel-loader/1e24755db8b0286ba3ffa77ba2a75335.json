{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()));\nstore.subscribe(() => saveToLocalStorage(store.getState));\nexport default store;","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1 - Copie/client/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","initialState","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","subscribe","getState"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,YAAxB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAC9B,MAAG;AACC,UAAMC,eAAe,GAACC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAtB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BJ,eAA7B;AACH,GAHD,CAGE,OAAMK,CAAN,EAAQ;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AACD,MAAMG,YAAY,GAAC,EAAnB;AAEA,MAAMC,UAAU,GAAC,CAACb,KAAD,CAAjB;AAEA,MAAMc,KAAK,GAAGjB,WAAW,CAACI,WAAD,EAAaW,YAAb,EAA0Bb,OAAO,CAACD,eAAe,CAAC,GAAGe,UAAJ,CAAhB,EAC1DE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACE,oCAAP,EADmB,CAAjC,CAAzB;AAKAH,KAAK,CAACI,SAAN,CAAgB,MAAIhB,kBAAkB,CAACY,KAAK,CAACK,QAAP,CAAtC;AAEA,eAAeL,KAAf","sourcesContent":["import {createStore,applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nfunction saveToLocalStorage(state){\n    try{\n        const serializedState=JSON.stringify(state)\n        localStorage.setItem('state',serializedState)\n    } catch(e){\n        console.log(e)\n    }\n}\nconst initialState={};\n\nconst middleware=[thunk];\n\nconst store = createStore(rootReducer,initialState,compose(applyMiddleware(...middleware),\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n    \n    ));\n\nstore.subscribe(()=>saveToLocalStorage(store.getState))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}