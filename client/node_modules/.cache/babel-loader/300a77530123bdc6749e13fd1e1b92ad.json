{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\PROJECT\\\\Project1 - Copie\\\\client\\\\src\\\\Admin\\\\PrivateRoutes.js\";\nimport React from 'react';\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoutes = ({\n  render: Component,\n  isAuth,\n  ...rest\n}) => {\n  console.log(isAuth);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      isAuth: isAuth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 53\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 93\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuthAdmin\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(PrivateRoutes));","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1 - Copie/client/src/Admin/PrivateRoutes.js"],"names":["React","Redirect","Route","withRouter","PropTypes","connect","PrivateRoutes","render","Component","isAuth","rest","console","log","props","pathname","state","from","location","mapStateToProps","auth","isAuthAdmin"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAoB,aAApB;;AAOA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,MAAM,EAACC,SAAR;AAAkBC,EAAAA,MAAlB;AAAyB,KAAGC;AAA5B,CAAD,KAAuC;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,sBACI,oBAAC,KAAD,oBAAWC,IAAX;AAAiB,IAAA,MAAM,EAAGG,KAAD,IAAWJ,MAAD,gBAAS,oBAAC,SAAD,oBAAeI,KAAf;AAAsB,MAAA,MAAM,EAAEJ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT,gBAAiD,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAG;AAACK,QAAAA,QAAQ,EAAC,GAAV;AAAcC,QAAAA,KAAK,EAAC;AAACC,UAAAA,IAAI,EAACH,KAAK,CAACI;AAAZ;AAApB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAIH,CAND;;AAOA,MAAMC,eAAe,GAAEH,KAAD,IAAS;AAC3B,SAAO;AACXN,IAAAA,MAAM,EAACM,KAAK,CAACI,IAAN,CAAWC;AADP,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAACa,eAAD,EAAiB,IAAjB,CAAP,CAA8Bf,UAAU,CAACG,aAAD,CAAxC,CAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport { Redirect, Route, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect}from'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PrivateRoutes = ({render:Component,isAuth,...rest}) => {\r\n    console.log(isAuth)\r\n    return ( \r\n        <Route {...rest} render={(props)=>((isAuth)?<Component {...props} isAuth={isAuth}/>:<Redirect to ={{pathname:'/',state:{from:props.location}}}/>)}/>\r\n\r\n     );\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\nisAuth:state.auth.isAuthAdmin\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps,null)(withRouter(PrivateRoutes));"]},"metadata":{},"sourceType":"module"}