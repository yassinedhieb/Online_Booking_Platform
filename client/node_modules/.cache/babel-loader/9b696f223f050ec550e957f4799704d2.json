{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\PROJECT\\\\Project1\\\\client\\\\src\\\\components\\\\auth\\\\registerModel.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, Form, FormGroup, Label, Input, ModalBody, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport Axios from 'axios';\n\nclass RegisterModel extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      //clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); //  const {name,email,password}=this.state;\n      //create user object\n\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      };\n      Axios.post('http://localhost:5000/', newUser);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"mb-3\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"name\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      className: \"mb-3\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      className: \"mb-3\",\n      id: \"passwors\",\n      placeholder: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      onClick: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, \"Register\"))))));\n  }\n\n}\n\nRegisterModel.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  clearErrors\n})(RegisterModel);","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1/client/src/components/auth/registerModel.js"],"names":["React","Component","Button","Modal","ModalHeader","Form","FormGroup","Label","Input","ModalBody","NavLink","Alert","connect","PropTypes","register","clearErrors","Axios","RegisterModel","state","modal","name","email","password","msg","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","post","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    ModalBody,\n    NavLink,\n    Alert\n} from 'reactstrap';\n\n\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types'\nimport {register} from '../../actions/authActions';\nimport{clearErrors} from '../../actions/errorActions';\nimport Axios from 'axios';\n\n\n class RegisterModel extends Component{\n     state={\n         modal:false,\n         name:'',\n         email:'',\n         password:'',\n         msg:null\n     };\n\n    static propTypes={\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        register:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    };\n    toggle=()=>{\n        //clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal:!this.state.modal\n        })\n    }\n    componentDidUpdate(prevProps){\n        const {error,isAuthenticated} = this.props;\n        if(error!==prevProps.error){\n            //check for register error\n            if(error.id==='REGISTER_FAIL'){\n                this.setState({msg:error.msg.msg})\n            } else{\n                this.setState({msg:null})\n            }\n        }\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n     ;\n     onChange=(e)=>{\n         this.setState({[e.target.name]:e.target.value})\n     }\n     onSubmit=(e)=>{\n         e.preventDefault();\n        //  const {name,email,password}=this.state;\n\n         //create user object\n         const newUser={\n             name:this.state.name,\n             email:this.state.email,\n             password:this.state.password\n         }\n       Axios.post('http://localhost:5000/',newUser)\n     };\n\n     render (){\n         return(\n             <div>\n                 <NavLink onClick={this.toggle} href=\"#\">\n                     Register\n                 </NavLink>\n                 <Modal isOpen={this.state.modal}\n                     toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n         {this.state.msg ? (<Alert color='danger'>{this.state.msg}</Alert>):null}\n                        <Form >\n                            <FormGroup>\n                                <Label for =\"item\">Name</Label>\n                                <Input type='text'\n                                className='mb-3'\n                                name='name'\n                                id='name'\n                                placeholder='name'\n                                onChange={this.onChange}/>\n\n                                <Label for ='email'>Email</Label>\n                                <Input type='email'\n                                className='mb-3'\n                                name='email'\n                                id='email'\n                                placeholder='email'\n                                onChange={this.onChange}/>\n\n                                <Label for ='password'>password</Label>\n                                <Input type='password'\n                                name='password'\n                                className='mb-3'\n                                id='passwors'\n                                placeholder='password'\n                                onChange={this.onChange}/>\n                                <Button color=\"dark\"\n                                style={{marginTop:'2rem'}} block onClick={this.onSubmit}>Register</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                     \n                 </Modal>\n             </div>\n         )\n     }\n\n }\n\n const mapStateToProps=state=>({\n    isAuthenticated:state.auth.isAuthenticated,\n    error:state.error    \n})\n\n export default connect(mapStateToProps,{register,clearErrors})(RegisterModel)"]},"metadata":{},"sourceType":"module"}