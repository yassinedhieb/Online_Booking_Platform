{"ast":null,"code":"import { GET_IMAGES, DELETE_IMAGE, ADD_IMAGE, IMAGES_LOADING, EDIT_IMAGE } from './types';\nimport axios from 'axios';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\nexport const getImages = () => dispatch => {\n  dispatch(setImagesLoaoding());\n  axios.get('/api/Images').then(res => dispatch({\n    type: GET_IMAGES,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const getImage = id => dispatch => {\n  dispatch(setImagesLoaoding());\n  axios.get(`/api/Images/update/${id}`).then(res => dispatch({\n    type: GET_IMAGES,\n    payload: res.id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const getImageForHost = id => dispatch => {\n  dispatch(setImagesLoaoding());\n  axios.get(`/api/Images/${id}`).then(res => dispatch({\n    type: GET_IMAGES,\n    payload: res.id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const addImage = a => dispatch => {\n  console.log(a);\n  axios.post('/api/Images', a).then(res => dispatch({\n    type: ADD_IMAGE,\n    payload: res.data\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status))); // window.Image = '/newHost';\n};\nexport const editImage = (a, id) => dispatch => {\n  console.log(a);\n  axios.put(`/api/Images/update/${id}`, a).then(res => dispatch({\n    type: EDIT_IMAGE,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status))); // window.Image = '/host';\n};\nexport const editImageHost = (a, id) => dispatch => {\n  console.log(a);\n  axios.put(`/api/Images/updateHost/${id}`, a).then(res => dispatch({\n    type: EDIT_IMAGE,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status))); // window.Image = '/host';\n};\nexport const deleteImage = id => (dispatch, getState) => {\n  axios.delete(`/api/Images/${id}`, tokenConfig(getState)).then(res => dispatch({\n    type: DELETE_IMAGE,\n    payload: id\n  })).catch(err => dispatch(returnErrors(err.response.data, err.response.status)));\n};\nexport const setImagesLoaoding = () => {\n  return {\n    type: IMAGES_LOADING\n  };\n};","map":{"version":3,"sources":["D:/Desktop/project/PROJECT/Project1 - Copie/client/src/actions/imageActions.js"],"names":["GET_IMAGES","DELETE_IMAGE","ADD_IMAGE","IMAGES_LOADING","EDIT_IMAGE","axios","tokenConfig","returnErrors","getImages","dispatch","setImagesLoaoding","get","then","res","type","payload","data","catch","err","response","status","getImage","id","getImageForHost","addImage","a","console","log","post","editImage","put","editImageHost","deleteImage","getState","delete"],"mappings":"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","sourcesContent":["import { GET_IMAGES, DELETE_IMAGE, ADD_IMAGE,IMAGES_LOADING, EDIT_IMAGE } from './types';\r\nimport axios from 'axios'\r\nimport {tokenConfig} from './authActions';\r\nimport {returnErrors} from './errorActions'\r\n\r\nexport const getImages=()=>dispatch=>{\r\n    dispatch(setImagesLoaoding());\r\n    axios\r\n    .get(('/api/Images'))\r\n    .then(res=>\r\n        dispatch({\r\n            type:GET_IMAGES,\r\n            payload:res.data\r\n        }))\r\n        .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n}\r\nexport const getImage=(id)=>dispatch=>{\r\n    dispatch(setImagesLoaoding());\r\n    axios\r\n    .get(`/api/Images/update/${id}`)\r\n    .then(res=>\r\n        dispatch({\r\n            type:GET_IMAGES,\r\n            payload:res.id\r\n        }))\r\n        .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n}\r\nexport const getImageForHost=(id)=>dispatch=>{\r\n    dispatch(setImagesLoaoding());\r\n    axios\r\n    .get(`/api/Images/${id}`)\r\n    .then(res=>\r\n        dispatch({\r\n            type:GET_IMAGES,\r\n            payload:res.id\r\n        }))\r\n        .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n}\r\nexport const addImage=(a)=>dispatch=>{\r\n    console.log(a)\r\n    axios.post('/api/Images',a)\r\n    .then(res=>dispatch({\r\n        type:ADD_IMAGE,\r\n        payload:res.data\r\n    }))\r\n    .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n    // window.Image = '/newHost';\r\n\r\n};\r\nexport const editImage=(a,id)=>dispatch=>{\r\n    console.log(a)\r\n    axios.put(`/api/Images/update/${id}`,a).then(res=>\r\n        dispatch({\r\n            type:EDIT_IMAGE,\r\n            payload:id\r\n        }))\r\n        .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n        // window.Image = '/host';\r\n};\r\nexport const editImageHost=(a,id)=>dispatch=>{\r\n    console.log(a)\r\n    axios.put(`/api/Images/updateHost/${id}`,a).then(res=>\r\n        dispatch({\r\n            type:EDIT_IMAGE,\r\n            payload:id\r\n        }))\r\n        .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n        // window.Image = '/host';\r\n};\r\nexport const deleteImage=(id)=>(dispatch,getState)=>{\r\n    axios.delete(`/api/Images/${id}`,tokenConfig(getState)).then(res=>\r\n        dispatch({\r\n            type:DELETE_IMAGE,\r\n            payload:id\r\n        }))\r\n        .catch(err=>dispatch(returnErrors(err.response.data,err.response.status)))\r\n\r\n};\r\n\r\n\r\nexport const setImagesLoaoding=()=>{\r\n    return {\r\n        type:IMAGES_LOADING\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}