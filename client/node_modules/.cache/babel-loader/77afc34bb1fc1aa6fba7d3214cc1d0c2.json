{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\PROJECT\\\\Project1\\\\client\\\\src\\\\components\\\\MapComponents\\\\Map\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Card, Button, Form, TextArea, Dimmer, Loader } from 'semantic-ui-react';\nimport \"./Map.css\";\nimport UserMarkers from '../Markers';\nimport OtherMenu from '../OtherMenu'; //Leaflet\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\nimport 'leaflet/dist/leaflet.css'; //icon image\n\nimport redIcon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png'; //actions from dispatch\n\nimport { getMessage, saveMessage } from '../../../actions/saveMessageActions';\nimport { connect } from 'react-redux';\nlet userIcon = L.icon({\n  iconUrl: redIcon,\n  popupAnchor: [12.5, 0],\n  shadowUrl: iconShadow\n});\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n  popupAnchor: [12.5, 0]\n});\n\nclass MapBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      location: {\n        //default Helsinki\n        lat: 60.16734721573472,\n        lng: 24.94248390197754\n      },\n      haveUsersLocation: false,\n      zoom: 2,\n      userMessage: {\n        name: '',\n        message: ''\n      },\n      isSubmitted: false,\n      messageList: [],\n      tempLocation: {\n        lat: 0,\n        lng: 0\n      }\n    };\n\n    this.getCurrentLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          location: {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          },\n          haveUsersLocation: true\n        });\n      }, () => {\n        //when failed\n        console.log('uh oh..they didnt give us their locaiton');\n        fetch('https://ipapi.co/json').then(res => res.json()).then(location => {\n          this.setState({\n            location: {\n              lat: location.latitude,\n              lng: location.longitude\n            },\n            haveUsersLocation: true\n          });\n        });\n      });\n    };\n\n    this.formSubmit = e => {\n      e.preventDefault();\n      const item = this.state.userMessage;\n      this.props.dispatch(saveMessage(item));\n      this.setState({\n        isSubmitted: true\n      });\n    };\n\n    this.valueChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({\n        userMessage: { ...prevState.location,\n          ...prevState.userMessage,\n          [name]: value\n        }\n      }));\n    };\n\n    this.mergeMessageInNearLocation = messageList => {\n      const haveSeenLocation = {};\n      messageList = messageList.reduce((all, message) => {\n        const key = [message.lat.toFixed(2), message.lng.toFixed(2)];\n\n        if (haveSeenLocation[key]) {\n          haveSeenLocation[key].otherMessages = haveSeenLocation[key].otherMessages || [];\n          haveSeenLocation[key].otherMessages.push(message);\n        } else {\n          haveSeenLocation[key] = message;\n          all.push(message);\n        }\n\n        return all;\n      }, []);\n      return messageList;\n    };\n\n    this.isMarkerMoved = e => {\n      const location = e.target._latlng; //console.log(location)\n\n      this.setState({\n        location: {\n          lat: location.lat,\n          lng: location.lng\n        },\n        tempLocation: {\n          lat: location.lat,\n          lng: location.lng\n        }\n      });\n    };\n\n    this.handleZoom = e => {\n      const zoom = e.target._zoom;\n      this.setState({\n        zoom: zoom\n      });\n    };\n\n    this.popUpOpen = ref => {\n      if (ref) {\n        ref.leafletElement.openPopup();\n      }\n    };\n\n    this.addControl = ref => {\n      const provider = new OpenStreetMapProvider();\n      const searchControl = new GeoSearchControl({\n        provider: provider,\n        style: 'bar',\n        showMarker: false\n      }); //console.log(ref)\n\n      if (ref) {\n        //map on \n        ref.leafletElement.addControl(searchControl);\n        ref.leafletElement.on('geosearch/showlocation', function (e) {\n          this.setTempLocation(e.location);\n        }.bind(this));\n      }\n    };\n\n    this.setThisLocation = () => {\n      this.setState({\n        location: this.state.tempLocation\n      });\n    };\n\n    this.setTempLocation = location => {\n      //console.log(\"tempLocationInThis\"+location)\n      this.setState({\n        tempLocation: {\n          lat: location.y,\n          lng: location.x\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getMessage());\n    this.getCurrentLocation();\n    this.setState({\n      zoom: 13\n    });\n  }\n\n  render() {\n    const position = [this.state.location.lat, this.state.location.lng];\n    const loader = /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }));\n    let userMarkers = \"\";\n\n    if (this.props.messageList.length > 0) {\n      let newMessageList = this.mergeMessageInNearLocation(this.props.messageList);\n      userMarkers = newMessageList.map((message, index) => {\n        return /*#__PURE__*/React.createElement(UserMarkers, {\n          key: \"userMarker_\" + index,\n          userMessage: message,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        });\n      });\n    }\n\n    return this.props.isLoading ? loader : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"map\",\n      center: position,\n      zoom: this.state.zoom,\n      maxZoom: 18,\n      onZoomend: this.handleZoom,\n      ref: this.addControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }), userMarkers, this.state.haveUsersLocation && !this.state.isSubmitted ? /*#__PURE__*/React.createElement(Marker, {\n      icon: userIcon,\n      position: position,\n      ref: this.popUpOpen,\n      draggable: true,\n      onDragend: this.isMarkerMoved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"red\",\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }, \"Hello! You are here!\"))) : /*#__PURE__*/React.createElement(Marker, {\n      icon: userIcon,\n      position: position,\n      ref: this.popUpOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      style: {\n        padding: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, this.state.userMessage.name), this.state.userMessage.message))), /*#__PURE__*/React.createElement(Card, {\n      className: \"message-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }\n    }, \"Welcome to GuestMapp!\"), /*#__PURE__*/React.createElement(Card.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, \"Leave a message with your location ! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 76\n      }\n    }), \"Thanks for stopping by !\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }), this.state.isSubmitted ? \"Thanks for the message and support !\" : /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.formSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.valueChange,\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Enter your name\",\n      type: \"text\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, \"Message\"), /*#__PURE__*/React.createElement(TextArea, {\n      onChange: this.valueChange,\n      id: \"message\",\n      name: \"message\",\n      placeholder: \"Enter your message\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        float: \"right\"\n      },\n      type: \"submit\",\n      disabled: !this.state.haveUsersLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }, \"Submit\")))), this.state.isSubmitted ? \"\" : /*#__PURE__*/React.createElement(OtherMenu, {\n      onCurrentLocation: this.getCurrentLocation,\n      onMoveToAddressFromList: this.setThisLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.getMessage.loading,\n  messageList: state.getMessage.item\n});\n\nexport default connect(mapStateToProps)(MapBox);","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1/client/src/components/MapComponents/Map/index.js"],"names":["React","Component","Card","Button","Form","TextArea","Dimmer","Loader","UserMarkers","OtherMenu","Map","TileLayer","Marker","Popup","L","GeoSearchControl","OpenStreetMapProvider","redIcon","iconShadow","getMessage","saveMessage","connect","userIcon","icon","iconUrl","popupAnchor","shadowUrl","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","MapBox","state","location","lat","lng","haveUsersLocation","zoom","userMessage","name","message","isSubmitted","messageList","tempLocation","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","console","log","fetch","then","res","json","formSubmit","e","preventDefault","item","props","dispatch","valueChange","value","target","prevState","mergeMessageInNearLocation","haveSeenLocation","reduce","all","key","toFixed","otherMessages","push","isMarkerMoved","_latlng","handleZoom","_zoom","popUpOpen","ref","leafletElement","openPopup","addControl","provider","searchControl","style","showMarker","on","setTempLocation","bind","setThisLocation","y","x","componentDidMount","render","loader","userMarkers","length","newMessageList","map","index","isLoading","padding","textAlign","float","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Card, Button, Form, TextArea, Dimmer, Loader } from 'semantic-ui-react';\r\nimport \"./Map.css\";\r\nimport UserMarkers from '../Markers';\r\nimport OtherMenu from '../OtherMenu';\r\n\r\n//Leaflet\r\nimport {Map, TileLayer, Marker, Popup} from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n//icon image\r\nimport redIcon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\n\r\n//actions from dispatch\r\nimport {getMessage, saveMessage} from '../../../actions/saveMessageActions';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet userIcon = L.icon({\r\n    iconUrl: redIcon,\r\n    popupAnchor: [12.5, 0],\r\n    shadowUrl: iconShadow\r\n});\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n    popupAnchor: [12.5, 0]\r\n});\r\n\r\n\r\n\r\nclass MapBox extends Component {\r\n    \r\n    state = {\r\n        location: {//default Helsinki\r\n            lat: 60.16734721573472,\r\n            lng: 24.94248390197754\r\n        },\r\n        haveUsersLocation: false,\r\n        zoom: 2,\r\n        userMessage: {\r\n            name:'',\r\n            message:''\r\n        },\r\n        isSubmitted: false,\r\n        messageList: [],\r\n        tempLocation:{\r\n            lat: 0,\r\n            lng: 0\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.dispatch(getMessage())\r\n        this.getCurrentLocation();\r\n        this.setState({\r\n            zoom: 13\r\n        })\r\n    }\r\n    \r\n    getCurrentLocation = () => {\r\n        navigator.geolocation.getCurrentPosition( (position) => {\r\n            this.setState({\r\n                location:{\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                },\r\n                haveUsersLocation: true\r\n            })\r\n        }, ()=>{ //when failed\r\n            console.log('uh oh..they didnt give us their locaiton')\r\n            fetch('https://ipapi.co/json')\r\n                .then(res => res.json())\r\n                .then( location => {\r\n                    this.setState({\r\n                        location:{\r\n                            lat: location.latitude,\r\n                            lng: location.longitude\r\n                        },\r\n                        haveUsersLocation: true\r\n                    })\r\n                })\r\n        })\r\n    }\r\n    \r\n    formSubmit = (e)=> {\r\n        e.preventDefault();\r\n        \r\n        const item = this.state.userMessage;\r\n        this.props.dispatch(saveMessage(item));\r\n        this.setState({\r\n            isSubmitted: true\r\n        })\r\n    }\r\n\r\n    valueChange = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState( (prevState) => ({\r\n            userMessage : {\r\n                ...prevState.location,\r\n                ...prevState.userMessage,\r\n                [name]: value\r\n            }    \r\n        }))\r\n    }\r\n\r\n    mergeMessageInNearLocation = (messageList) => {\r\n        const haveSeenLocation = {}\r\n        messageList = messageList.reduce( (all, message)=>{\r\n            const key = [message.lat.toFixed(2),message.lng.toFixed(2)];\r\n            if(haveSeenLocation[key]){\r\n                haveSeenLocation[key].otherMessages = haveSeenLocation[key].otherMessages || [];\r\n                haveSeenLocation[key].otherMessages.push(message)\r\n            }else{\r\n                haveSeenLocation[key] = message;\r\n                all.push(message);\r\n            }\r\n            return all;\r\n        }, []);\r\n        \r\n        return messageList;\r\n    }\r\n\r\n    isMarkerMoved = (e) => {\r\n\r\n        const location = e.target._latlng;\r\n        //console.log(location)\r\n        this.setState({\r\n            location:{\r\n                lat: location.lat,\r\n                lng: location.lng\r\n            }, \r\n            tempLocation:{\r\n                lat: location.lat,\r\n                lng: location.lng\r\n            }   \r\n        })\r\n    }\r\n\r\n    handleZoom = (e)=>{\r\n        const zoom = e.target._zoom;\r\n        this.setState({\r\n            zoom:zoom\r\n        })\r\n    }\r\n    \r\n    popUpOpen = ref => {\r\n        if (ref) {\r\n          ref.leafletElement.openPopup()\r\n        }\r\n      }\r\n\r\n    addControl = ref => {\r\n        const provider = new OpenStreetMapProvider()\r\n        const searchControl = new GeoSearchControl({\r\n            provider: provider,\r\n            style:'bar',\r\n            showMarker: false,\r\n\r\n        })\r\n        //console.log(ref)\r\n        \r\n        if(ref){  //map on \r\n            ref.leafletElement.addControl(searchControl)\r\n            ref.leafletElement.on('geosearch/showlocation', function(e) {\r\n                this.setTempLocation(e.location);\r\n            }.bind(this));\r\n        }\r\n    }\r\n\r\n    setThisLocation = () => {\r\n        this.setState({\r\n            location: this.state.tempLocation\r\n        })\r\n    }\r\n    \r\n    setTempLocation = (location) => {\r\n        //console.log(\"tempLocationInThis\"+location)\r\n        this.setState({\r\n            tempLocation:{\r\n                lat: (location.y),\r\n                lng: (location.x),\r\n            }\r\n        })\r\n           \r\n    }\r\n    \r\n    render() {\r\n        const position = [this.state.location.lat, this.state.location.lng]\r\n        const loader = (<Dimmer active>\r\n                        <Loader />\r\n                        </Dimmer>)        \r\n        let userMarkers = \"\";\r\n        if( (this.props.messageList).length > 0){\r\n            let newMessageList = this.mergeMessageInNearLocation(this.props.messageList)\r\n            \r\n            userMarkers = newMessageList.map( (message, index) => {\r\n                return (\r\n                <UserMarkers key={\"userMarker_\"+index} userMessage={message}/>)\r\n            })\r\n        }\r\n\r\n        return (\r\n\r\n        ( this.props.isLoading \r\n        ? loader \r\n        : <div className=\"map\">\r\n\r\n            <Map className=\"map\" \r\n                center={position} \r\n                zoom={this.state.zoom}\r\n                maxZoom={18}\r\n                onZoomend={this.handleZoom}\r\n                ref={this.addControl}\r\n                >\r\n                <TileLayer\r\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                 \r\n                {userMarkers}\r\n\r\n            { this.state.haveUsersLocation && !this.state.isSubmitted \r\n            ? \r\n                <Marker\r\n                    icon={userIcon} \r\n                    position={position}\r\n                    ref={this.popUpOpen}\r\n                    draggable={true}\r\n                    onDragend={this.isMarkerMoved}\r\n                    >\r\n                    <Popup>\r\n                        <Button color=\"red\" style={{padding: \"5px\"}}>Hello! You are here!</Button> \r\n                    </Popup>\r\n                </Marker>\r\n            :   <Marker\r\n                    icon={userIcon} \r\n                    position={position}\r\n                    ref={this.popUpOpen}>\r\n                    <Popup>\r\n                        <Button color=\"blue\" style={{padding: \"5px\"}}>{this.state.userMessage.name}</Button> \r\n                        {this.state.userMessage.message}\r\n                    </Popup>\r\n                </Marker>\r\n            }\r\n            \r\n            </Map>\r\n\r\n            <Card className=\"message-form\">\r\n                <Card.Content>\r\n                    <Card.Header style={{textAlign:\"center\"}}>Welcome to GuestMapp!</Card.Header>\r\n                    <Card.Description>Leave a message with your location ! <br/>\r\n                        Thanks for stopping by !\r\n                    </Card.Description>\r\n                    <br/>\r\n                    {this.state.isSubmitted ? \"Thanks for the message and support !\" : \r\n                    <Form onSubmit={this.formSubmit}>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <input \r\n                                onChange={this.valueChange} \r\n                                id=\"name\" \r\n                                name=\"name\" \r\n                                placeholder='Enter your name' \r\n                                type=\"text\"\r\n                                required />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Message</label>\r\n                            <TextArea\r\n                                onChange={this.valueChange} \r\n                                id=\"message\" \r\n                                name=\"message\" \r\n                                placeholder='Enter your message'\r\n                                required />\r\n                        </Form.Field>\r\n                        <Button style={{float:\"right\"}} type='submit' disabled={!this.state.haveUsersLocation}>Submit</Button>\r\n                    </Form>}\r\n                </Card.Content>\r\n            </Card>\r\n            {this.state.isSubmitted ? \"\": \r\n            <OtherMenu onCurrentLocation={this.getCurrentLocation} onMoveToAddressFromList={this.setThisLocation}/>}\r\n            </div>)\r\n                    \r\n        );\r\n    }   \r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=> ({\r\n    isLoading: state.getMessage.loading,\r\n    messageList: state.getMessage.item\r\n})\r\n\r\nexport default connect(mapStateToProps)(MapBox);"]},"metadata":{},"sourceType":"module"}