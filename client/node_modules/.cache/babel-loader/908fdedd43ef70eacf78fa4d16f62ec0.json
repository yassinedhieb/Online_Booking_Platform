{"ast":null,"code":"export const GET_MESSAGE_SUCCESS = \"GET_MESSAGE_SUCCESS\";\nexport const GET_MESSAGE_FAILED = \"GET_MESSAGE_FAILED\";\nexport const SAVE_MESSAGE_SUCCESS = \"SAVE_MESSAGE_SUCCESS\";\nexport const SAVE_MESSAGE_FAILED = \"SAVE_MESSAGE_FAILED\";\nexport const LOADING = \"LOADING\"; //RETURN\n\nconst getMessageSuccess = item => ({\n  type: GET_MESSAGE_SUCCESS,\n  item: item\n});\n\nconst getMessageFailed = error => ({\n  type: GET_MESSAGE_FAILED,\n  error: error\n});\n\nconst saveMessageSuccess = () => ({\n  type: SAVE_MESSAGE_SUCCESS\n});\n\nconst saveMessageFailed = error => ({\n  type: SAVE_MESSAGE_FAILED,\n  error: error\n});\n\nconst loading = () => ({\n  type: LOADING\n});\n\nexport const getMessage = () => {\n  console.log(\"getMessageAction request\");\n  return dispatch => {\n    const getObject = {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    dispatch(loading());\n    fetch('/api/getMessages', getObject).then(response => {\n      if (response.ok) {\n        response.json().then(resData => {\n          dispatch(getMessageSuccess(resData));\n        });\n      } else {\n        dispatch(getMessageFailed(\"response is not ok\"));\n      }\n    }).catch(err => {\n      dispatch(getMessageFailed(\"Server not ok with \" + err));\n    });\n  };\n};\nexport const saveMessage = item => {\n  console.log(\"saveMessage request\");\n  return dispatch => {\n    const postObject = {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    };\n    dispatch(loading());\n    fetch('/api/saveMessage', postObject).then(response => {\n      if (response.ok) {\n        dispatch(saveMessageSuccess());\n        alert(\"Your message saved well\");\n      } else {\n        dispatch(saveMessageFailed(\"response error\"));\n      }\n    }).catch(err => {\n      dispatch(saveMessageFailed(\"server error \" + err));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1/client/src/actions/saveMessageActions.js"],"names":["GET_MESSAGE_SUCCESS","GET_MESSAGE_FAILED","SAVE_MESSAGE_SUCCESS","SAVE_MESSAGE_FAILED","LOADING","getMessageSuccess","item","type","getMessageFailed","error","saveMessageSuccess","saveMessageFailed","loading","getMessage","console","log","dispatch","getObject","method","mode","credentials","headers","fetch","then","response","ok","json","resData","catch","err","saveMessage","postObject","body","JSON","stringify","alert"],"mappings":"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","sourcesContent":["export const GET_MESSAGE_SUCCESS = \"GET_MESSAGE_SUCCESS\";\r\nexport const GET_MESSAGE_FAILED = \"GET_MESSAGE_FAILED\";\r\n\r\nexport const SAVE_MESSAGE_SUCCESS = \"SAVE_MESSAGE_SUCCESS\";\r\nexport const SAVE_MESSAGE_FAILED = \"SAVE_MESSAGE_FAILED\";\r\n\r\nexport const LOADING = \"LOADING\";\r\n\r\n//RETURN\r\n\r\nconst getMessageSuccess = (item) => ({\r\n    type: GET_MESSAGE_SUCCESS,\r\n    item: item\r\n})\r\n\r\nconst getMessageFailed = (error) => ({\r\n    type: GET_MESSAGE_FAILED,\r\n    error: error\r\n})\r\n\r\nconst saveMessageSuccess = () => ({\r\n    type: SAVE_MESSAGE_SUCCESS\r\n})\r\n\r\nconst saveMessageFailed = (error) => ({\r\n    type: SAVE_MESSAGE_FAILED,\r\n    error: error\r\n})\r\n\r\nconst loading = () => ({\r\n    type: LOADING\r\n})\r\n\r\n\r\nexport const getMessage = ()=> {\r\n    console.log(\"getMessageAction request\")\r\n    return dispatch => {\r\n        const getObject = {\r\n            method: \"GET\",\r\n            mode: \"cors\",\r\n            credentials: \"include\",\r\n            headers: {\"Content-Type\":\"application/json\"},\r\n        }\r\n\r\n        dispatch(loading()) \r\n\r\n        fetch('/api/getMessages', getObject).then( response => {\r\n            if(response.ok){\r\n                response.json().then( resData => {\r\n                    dispatch(getMessageSuccess(resData))\r\n                })\r\n            }else{\r\n                dispatch(getMessageFailed(\"response is not ok\"))\r\n            }\r\n        }).catch(err=>{ \r\n            dispatch(getMessageFailed(\"Server not ok with \"+ err))\r\n        })\r\n    }\r\n}\r\n\r\nexport const saveMessage = ( item ) => {\r\n    console.log(\"saveMessage request\")\r\n    return dispatch => {\r\n        const postObject = {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            credentials: \"include\",\r\n            headers: {\"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify(item)\r\n        }\r\n        \r\n        dispatch(loading())\r\n\r\n        fetch('/api/saveMessage', postObject).then( response => {\r\n            if(response.ok){ \r\n                dispatch(saveMessageSuccess())\r\n                alert(\"Your message saved well\")\r\n            }else{\r\n                dispatch(saveMessageFailed(\"response error\"))\r\n            }\r\n        }).catch( err => {\r\n            dispatch(saveMessageFailed(\"server error \"+err))\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}