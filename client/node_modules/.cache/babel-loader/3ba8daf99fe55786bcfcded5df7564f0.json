{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\PROJECT\\\\Project1\\\\client\\\\src\\\\components\\\\Weather\\\\Weather.js\";\nimport React, { setState } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView, MDBBtn, MDBInput } from 'mdbreact';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.api = {\n      key: \"7d4ef5d23648c7c62acd3ccfa1a0a30b\",\n      base: \"https://api.openweathermap.org/data/2.5/\"\n    };\n\n    this.handleSearch = e => {\n      e.preventDefault();\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.search = evt => {\n      if (evt.key === \"Enter\") {\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n          this.setState({\n            weather: result\n          });\n          this.setState({\n            query: ''\n          });\n          console.log(result);\n        });\n      }\n    };\n\n    this.dateBuilder = d => {\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n      return `${day} ${date} ${month} ${year}`;\n    };\n\n    this.state = {\n      collapse: false,\n      query: '',\n      weather: {}\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MDBView, {\n      src: \"https://i.pinimg.com/originals/16/21/a1/1621a1e03793f1c27d93ed9d94c57388.jpg\",\n      style: {\n        padding: \"10%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MDBMask, {\n      overlay: \"indigo-slight\",\n      className: \"flex-center flex-column text-white text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"space-around\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MDBInput, {\n      type: \"text\",\n      placeholder: \"Search...\",\n      onInput: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        fontSize: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"'\", state.weather.name, \",\", weather.sys.country), this.dateBuilder(new Date()), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        fontSize: '120px',\n        fontWeight: '900',\n        textShadow: '3px 6px rgba(50,50,70,8.5)',\n        color: '#FFF'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        fontSize: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \" \", state.weather.weather[0].main)) : '')))));\n  }\n\n}\n\nexport default Weather;","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1/client/src/components/Weather/Weather.js"],"names":["React","setState","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBContainer","MDBMask","MDBView","MDBBtn","MDBInput","BrowserRouter","Router","Link","Weather","Component","constructor","props","api","key","base","handleSearch","e","preventDefault","query","target","value","search","evt","fetch","then","res","json","result","weather","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","state","collapse","onClick","bind","render","padding","display","flexDirection","justifyContent","main","fontSize","name","sys","country","Date","fontWeight","textShadow","color","Math","round","temp"],"mappings":"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","sourcesContent":["import React,{setState} from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView,MDBBtn, MDBInput } from 'mdbreact';\r\nimport { BrowserRouter as Router,Link } from 'react-router-dom';\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapse: false,\r\n      query:'',\r\n      weather:{}\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  api = {\r\n    key: \"7d4ef5d23648c7c62acd3ccfa1a0a30b\",\r\n    base: \"https://api.openweathermap.org/data/2.5/\"\r\n  }\r\n  handleSearch = (e) => {\r\n    e.preventDefault()\r\n    this.setState({query:e.target.value})\r\n\r\n}\r\n  search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          this.setState({weather:result});\r\n          this.setState({query:''});\r\n          console.log(result);\r\n        });\r\n    }\r\n  }\r\n   dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`}\r\n\r\n  \r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          \r\n          <MDBView src=\"https://i.pinimg.com/originals/16/21/a1/1621a1e03793f1c27d93ed9d94c57388.jpg\" style={{padding:\"10%\"}}>\r\n            <MDBMask overlay=\"indigo-slight\" className=\"flex-center flex-column text-white text-center\">\r\n              {/* <h2 style={{fontSize:'70px'}}>Let's get lost in Paradise</h2>\r\n              <h4 style={{fontSize:'40px'}}>Please choose Your identity</h4> */}\r\n              <div style={{display:'flex', flexDirection:'column',justifyContent:\"space-around\"}}>\r\n                {/* <MDBBtn gradient=\"purple\"><Link to=\"/newuser\">NewUser</Link></MDBBtn>\r\n                <MDBBtn gradient=\"purple\"><Link to=\"/user\">User</Link></MDBBtn>\r\n                <MDBBtn gradient=\"purple\"><Link to=\"/admin\">Admin</Link></MDBBtn> */}\r\n                <MDBInput type=\"text\" placeholder=\"Search...\" onInput={this.handleSearch} />\r\n                {(typeof weather.main!=\"undefined\")?(\r\n                  <div>\r\n              <h4 style={{fontSize:'40px'}}>'{state.weather.name},{weather.sys.country}</h4>\r\n              {this.dateBuilder(new Date())}\r\n              <h4 style={{fontSize:'120px',fontWeight:'900',textShadow:'3px 6px rgba(50,50,70,8.5)',color:'#FFF'}}>{Math.round(weather.main.temp)}°C</h4>\r\n              <h4 style={{fontSize:'40px'}}> {state.weather.weather[0].main}</h4>\r\n              </div>\r\n                ):('')}\r\n\r\n                {/* <MDBBtn gradient=\"blue\">Event Creator</MDBBtn>\r\n\r\n\r\n                <MDBBtn gradient=\"aqua\">Host</MDBBtn> */}\r\n              </div>\r\n            </MDBMask>\r\n          </MDBView>\r\n          \r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;"]},"metadata":{},"sourceType":"module"}