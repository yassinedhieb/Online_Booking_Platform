{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\PROJECT\\\\Project1\\\\client\\\\src\\\\Admin\\\\AdminRoutes.js\";\nimport { MDBContainer } from 'mdbreact';\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { registerAdmin } from '../actions/authActions';\nimport addItem from './../components/addItem';\nimport NewAdminRegister from './NewAdmin';\nimport SideNavigation from './sideNavigation copy';\nimport TopNavigation from './TopNavigation';\nimport PrivateRoutes from './PrivateRoutes';\n\nconst AdminRoutes = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SideNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"content\",\n    className: \"p-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TopNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PrivateRoutes, {\n    path: `${props.match.path}/addItem`,\n    component: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${props.match.path}/newadmin`,\n    component: NewAdminRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default AdminRoutes;","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1/client/src/Admin/AdminRoutes.js"],"names":["MDBContainer","React","Route","registerAdmin","addItem","NewAdminRegister","SideNavigation","TopNavigation","PrivateRoutes","AdminRoutes","props","match","path"],"mappings":";AAAA,SAASA,YAAT,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,sBAAS,uDACT,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,eAOH;AAAM,IAAA,EAAE,EAAC,SAAT;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEF,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,KAAN,CAAYC,IAAK,UAAzC;AAAoD,IAAA,SAAS,EAAER,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,eAGF,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,KAAN,CAAYC,IAAK,WAAjC;AAA6C,IAAA,SAAS,EAAEP,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHE,CAFA,CAPG,CAAT;AAgBH,CAjBD;;AAmBA,eAAeI,WAAf","sourcesContent":["import { MDBContainer } from 'mdbreact';\r\nimport React from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport { registerAdmin } from '../actions/authActions';\r\nimport addItem from './../components/addItem';\r\nimport NewAdminRegister from './NewAdmin';\r\nimport SideNavigation from './sideNavigation copy';\r\nimport TopNavigation from './TopNavigation';\r\nimport PrivateRoutes from './PrivateRoutes';\r\nconst AdminRoutes = (props) => {\r\n    return ( <>\r\n    <SideNavigation />\r\n          \r\n          \r\n         \r\n         \r\n         \r\n          <main id=\"content\" className=\"p-10\" >\r\n          <TopNavigation />\r\n          <MDBContainer>\r\n        \r\n        <PrivateRoutes path={`${props.match.path}/addItem`} component={addItem}/>\r\n        <Route path={`${props.match.path}/newadmin`} component={NewAdminRegister}/>\r\n        </MDBContainer>\r\n        </main>\r\n    </> );\r\n}\r\n \r\nexport default AdminRoutes;"]},"metadata":{},"sourceType":"module"}