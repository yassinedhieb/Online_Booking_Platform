{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\MERN-STACK-full-application-master\\\\MERN-STACK-full-application-master\\\\client\\\\src\\\\components\\\\auth\\\\LoginModal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, Form, FormGroup, Label, Input, ModalBody, NavLink, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\nclass LoginModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.toggle = () => {\n      //clear errors\n      this.props.clearErrors();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      }; //attempt login\n\n      this.props.login(user);\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error,\n      isAuthenticated\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({\n          msg: error.msg.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      onClick: this.toggle,\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, this.state.msg) : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      className: \"mb-3\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"email\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      className: \"mb-3\",\n      id: \"passwors\",\n      placeholder: \"password\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"Login\"))))));\n  }\n\n}\n\nLoginModal.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  clearErrors\n})(LoginModal);","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/MERN-STACK-full-application-master/MERN-STACK-full-application-master/client/src/components/auth/LoginModal.js"],"names":["React","Component","Button","Modal","ModalHeader","Form","FormGroup","Label","Input","ModalBody","NavLink","Alert","connect","PropTypes","login","clearErrors","LoginModal","state","modal","email","password","msg","toggle","props","setState","onChange","e","target","name","value","onSubmit","preventDefault","user","componentDidUpdate","prevProps","error","isAuthenticated","id","render","marginTop","propTypes","bool","object","isRequired","func","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    ModalBody,\n    NavLink,\n    Alert\n} from 'reactstrap';\n\n\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types'\nimport {login} from '../../actions/authActions';\nimport{clearErrors} from '../../actions/errorActions';\n\n\n class LoginModal extends Component{\n     state={\n         modal:false,\n         email:'',\n         password:'',\n         msg:null\n     };\n\n    static propTypes={\n        isAuthenticated:PropTypes.bool,\n        error:PropTypes.object.isRequired,\n        login:PropTypes.func.isRequired,\n        clearErrors:PropTypes.func.isRequired\n    };\n    toggle=()=>{\n        //clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal:!this.state.modal\n        })\n    }\n    componentDidUpdate(prevProps){\n        const {error,isAuthenticated} = this.props;\n        if(error!==prevProps.error){\n            //check for register error\n            if(error.id==='LOGIN_FAIL'){\n                this.setState({msg:error.msg.msg})\n            } else{\n                this.setState({msg:null})\n            }\n        }\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n     ;\n     onChange=(e)=>{\n         this.setState({[e.target.name]:e.target.value})\n     }\n     onSubmit=(e)=>{\n         e.preventDefault();\n         const {email,password} = this.state;\n         const user={\n             email,\n             password\n         }\n         //attempt login\n         this.props.login(user)\n         \n     };\n\n     render (){\n         return(\n             <div>\n                 <NavLink onClick={this.toggle} href=\"#\">\n                     Login\n                 </NavLink>\n                 <Modal isOpen={this.state.modal}\n                     toggle={this.toggle}>\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n         {this.state.msg ? (<Alert color='danger'>{this.state.msg}</Alert>):null}\n                        <Form onSubmit ={this.onSubmit}>\n                            <FormGroup>\n                                <Label for ='email'>Email</Label>\n                                <Input type='email'\n                                className='mb-3'\n                                name='email'\n                                id='email'\n                                placeholder='email'\n                                onChange={this.onChange}/>\n\n                                <Label for ='password'>password</Label>\n                                <Input type='password'\n                                name='password'\n                                className='mb-3'\n                                id='passwors'\n                                placeholder='password'\n                                onChange={this.onChange}/>\n                                <Button color=\"dark\"\n                                style={{marginTop:'2rem'}} block>Login</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                     \n                 </Modal>\n             </div>\n         )\n     }\n\n }\n\n const mapStateToProps=state=>({\n    isAuthenticated:state.auth.isAuthenticated,\n    error:state.error    \n})\n\n export default connect(mapStateToProps,{login,clearErrors})(LoginModal)"]},"metadata":{},"sourceType":"module"}