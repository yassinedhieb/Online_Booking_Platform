{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yassine\\\\Desktop\\\\project\\\\PROJECT\\\\Project1 - Copie\\\\client\\\\src\\\\components\\\\Weather\\\\Weather.js\";\nimport React, { useState } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView, MDBBtn, MDBInput } from 'mdbreact';\nconst api = {\n  key: \"0532382240bf757bb76a00817d8eed87\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App(props) {\n  const [query, setQuery] = useState(props.city);\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBView, {\n    src: \"https://cdn.pixabay.com/photo/2017/12/02/06/25/prka-2992314_960_720.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MDBMask, {\n    overlay: \"indigo-slight\",\n    className: \"flex-center flex-column text-white text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontSize: '70px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontSize: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, dateBuilder(new Date())), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      fontSize: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \" \", Math.round(weather.main.temp), \"\\xB0c\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontSize: '70px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, weather.weather[0].main)) : '')));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Yassine/Desktop/project/PROJECT/Project1 - Copie/client/src/components/Weather/Weather.js"],"names":["React","useState","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavbarToggler","MDBCollapse","MDBNavItem","MDBNavLink","MDBContainer","MDBMask","MDBView","MDBBtn","MDBInput","api","key","base","App","props","query","setQuery","city","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","fontSize","name","sys","country","Date","Math","round","temp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,YAApC,EAAkDC,gBAAlD,EAAoEC,WAApE,EAAiFC,UAAjF,EAA6FC,UAA7F,EAAyGC,YAAzG,EAAuHC,OAAvH,EAAgIC,OAAhI,EAAwIC,MAAxI,EAAgJC,QAAhJ,QAAgK,UAAhK;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,GAAG,EAAE,kCADK;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;;AAKA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAACiB,KAAK,CAACG,IAAP,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMuB,MAAM,GAAGC,GAAG,IAAI;AACpB,QAAIA,GAAG,CAACV,GAAJ,KAAY,OAAhB,EAAyB;AACvBW,MAAAA,KAAK,CAAE,GAAEZ,GAAG,CAACE,IAAK,aAAYG,KAAM,uBAAsBL,GAAG,CAACC,GAAI,EAA7D,CAAL,CACGY,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdP,QAAAA,UAAU,CAACO,MAAD,CAAV;AACAV,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,OANH;AAOD;AACF,GAVD;;AAYA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAb;AACA,QAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AAEA,QAAIC,GAAG,GAAGD,IAAI,CAACF,CAAC,CAACI,MAAF,EAAD,CAAd;AACA,QAAIC,IAAI,GAAGL,CAAC,CAACM,OAAF,EAAX;AACA,QAAIC,KAAK,GAAGN,MAAM,CAACD,CAAC,CAACQ,QAAF,EAAD,CAAlB;AACA,QAAIC,IAAI,GAAGT,CAAC,CAACU,WAAF,EAAX;AAEA,WAAQ,GAAEP,GAAI,IAAGE,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAvC;AACD,GAVD;;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAC,yEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,eAAjB;AAAiC,IAAA,SAAS,EAAC,gDAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAUE,OAAOrB,OAAO,CAACuB,IAAf,IAAuB,WAAxB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BxB,OAAO,CAACyB,IAAvC,QAA+CzB,OAAO,CAAC0B,GAAR,CAAYC,OAA3D,CADA,eAEA;AAAI,IAAA,KAAK,EAAE;AAACH,MAAAA,QAAQ,EAAC;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bb,WAAW,CAAC,IAAIiB,IAAJ,EAAD,CAA1C,CAFA,eAGA;AAAI,IAAA,KAAK,EAAE;AAACJ,MAAAA,QAAQ,EAAC;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgCK,IAAI,CAACC,KAAL,CAAW9B,OAAO,CAACuB,IAAR,CAAaQ,IAAxB,CAAhC,UAHA,eAIA;AAAI,IAAA,KAAK,EAAE;AAACP,MAAAA,QAAQ,EAAC;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BxB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBuB,IAAlD,CAJA,CADD,GAOM,EAjBP,CADF,CAFF,CADF;AA2BD;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBContainer, MDBMask, MDBView,MDBBtn, MDBInput } from 'mdbreact';\r\nconst api = {\r\n  key: \"0532382240bf757bb76a00817d8eed87\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nfunction App(props) {\r\n  const [query, setQuery] = useState(props.city);\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('');\r\n          console.log(result);\r\n        });\r\n    }\r\n  }\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      \r\n      <MDBView src=\"https://cdn.pixabay.com/photo/2017/12/02/06/25/prka-2992314_960_720.jpg\">\r\n        <MDBMask overlay=\"indigo-slight\" className=\"flex-center flex-column text-white text-center\">\r\n        <div>\r\n          {/* <MDBInput \r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n          /> */}\r\n        </div>\r\n        {(typeof weather.main != \"undefined\") ? (\r\n          <div>\r\n          <h2 style={{fontSize:'70px'}}>{weather.name}, {weather.sys.country}</h2>\r\n          <h4 style={{fontSize:'40px'}}>{dateBuilder(new Date())}</h4>\r\n          <h4 style={{fontSize:'40px'}}> {Math.round(weather.main.temp)}Â°c</h4>\r\n          <h2 style={{fontSize:'70px'}}>{weather.weather[0].main}</h2>\r\n          </div>\r\n          ) : ('')}\r\n        </MDBMask>\r\n      </MDBView>\r\n      \r\n    </header>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}